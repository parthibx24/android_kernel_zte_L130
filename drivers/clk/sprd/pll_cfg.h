/*
 * Spreatrum Clock support
 *
 * Copyright (C) 2015 Spreadtrum, Inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 * This program is distributed "as is" WITHOUT ANY WARRANTY of any
 * kind, whether express or implied; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

#ifndef __SPRD_PLL_CFG_H__
#define __SPRD_PLL_CFG_H__

#include "pll.h"

static struct sprd_pll_config sc9838_pll_config[] = {
	{
		.name = "sc9838_pll",
		.lock_done.lock_done = 1 << 27,
		.lock_done.rindex = 0,
		.div_s.div_s = 1 << 26,
		.div_s.rindex = 0,
		.mod_en.mod_en = 1 << 25,
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = 1 << 24,
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 3 << 18,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = 3 << 16,
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = 0x7ff,
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = 0x3f << 24,
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0xfffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0,
		.prediv_msk.rindex = 0,
		.postdiv_msk.postdiv_msk = 0x0,
		.itable = NULL,
		.udelay = SPRD_DELAY_1000,
	},
	{
	},
};

/* GPLL/LPLL/DPLL/RPLL/CPLL */
static struct sprd_ibias_table sc9850_adjustable_pll1_table[] = {
	{
		.rate = 780000000,
		.ibias = 0x0,
	},
	{
		.rate = 988000000,
		.ibias = 0x1,
	},
	{
		.rate = 1196000000,
		.ibias = 0x2,
	},
	{
		.rate = SPRD_PLL_MAX_RATE,
		.ibias = 0x2,
	},
};

/* TWPLL/MPLL0/MPLL1 */
static struct sprd_ibias_table sc9850_adjustable_pll2_table[] = {
	{
		.rate = 1638000000,
		.ibias = 0x0,
	},
	{
		.rate = 2080000000,
		.ibias = 0x1,
	},
	{
		.rate = 2600000000UL,
		.ibias = 0x2,
	},
	{
		.rate = SPRD_PLL_MAX_RATE,
		.ibias = 0x2,
	},
};

static struct fvco_threshold_struct sc9850_mpll0_threshold = {
	.rate = 1300000000,
	.flag = 1,
};

static struct fvco_threshold_struct sc9850_gpll_threshold = {
	.rate = 600000000,
	.flag = 1,
};

static struct sprd_pll_config sc9850_pll_config[] = {
	{
		.name  = "clk_mpll0",
		.lock_done.lock_done = (1 << 20),
		.lock_done.rindex = 0,
		.div_s.div_s = (1 << 19),
		.div_s.rindex = 0,
		.mod_en.mod_en = (1 << 18),
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = (1 << 17),
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 11),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = (0x7f),
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 25),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.postdiv_msk.postdiv_msk = (1 << 24),
		.postdiv_msk.rindex = 1,
		.postdiv_msk.fvco_threshold = &sc9850_mpll0_threshold,
		.itable = sc9850_adjustable_pll2_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name  = "clk_mpll1",
		.lock_done.lock_done = (1 << 20),
		.lock_done.rindex = 0,
		.div_s.div_s = (1 << 19),
		.div_s.rindex = 0,
		.mod_en.mod_en = (1 << 18),
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = (1 << 17),
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 11),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = 0x7f,
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 25),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = (1 << 24),
		.prediv_msk.rindex = 1,
		.postdiv_msk.postdiv_msk = 0x0,
		.itable = sc9850_adjustable_pll2_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name  = "clk_gpll",
		.lock_done.lock_done = (1 << 18),
		.lock_done.rindex = 0,
		.div_s.div_s = (1 << 15),
		.div_s.rindex = 0,
		.mod_en.mod_en = (1 << 14),
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = (1 << 13),
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 8),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = 0x7f,
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 25),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.postdiv_msk.fvco_threshold = &sc9850_gpll_threshold,
		.postdiv_msk.postdiv_msk = (1 << 17),
		.postdiv_msk.rindex = 0,
		.itable = sc9850_adjustable_pll1_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name  = "clk_dpll0",
		.lock_done.lock_done = (1 << 16),
		.lock_done.rindex = 0,
		.div_s.div_s = (1 << 15),
		.div_s.rindex = 0,
		.mod_en.mod_en = (1 << 14),
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = (1 << 13),
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 8),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = 0x7f,
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 25),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.postdiv_msk.postdiv_msk = 0x0,
		.itable = sc9850_adjustable_pll1_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name  = "clk_dpll1",
		.lock_done.lock_done = (1 << 16),
		.lock_done.rindex = 0,
		.div_s.div_s = (1 << 15),
		.div_s.rindex = 0,
		.mod_en.mod_en = (1 << 14),
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = (1 << 13),
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 8),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = 0x7f,
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 25),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.postdiv_msk.postdiv_msk = 0x0,
		.itable = sc9850_adjustable_pll1_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name  = "clk_twpll",
		.lock_done.lock_done = (1 << 21),
		.lock_done.rindex = 0,
		.div_s.div_s = (1 << 20),
		.div_s.rindex = 0,
		.mod_en.mod_en = (1 << 19),
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = (1 << 18),
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 13),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = 0x7f,
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 25),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.postdiv_msk.postdiv_msk = 0x0,
		.itable = sc9850_adjustable_pll2_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name  = "clk_ltepll0",
		.lock_done.lock_done = (1 << 31),
		.lock_done.rindex = 0,
		.div_s.div_s = (1 << 27),
		.div_s.rindex = 0,
		.mod_en.mod_en = (1 << 26),
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = (1 << 25),
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 20),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = 0x7f,
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 25),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.postdiv_msk.postdiv_msk = 0x0,
		.itable = sc9850_adjustable_pll1_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name  = "clk_ltepll1",
		.lock_done.lock_done = (1 << 31),
		.lock_done.rindex = 0,
		.div_s.div_s = (1 << 27),
		.div_s.rindex = 0,
		.mod_en.mod_en = (1 << 26),
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = (1 << 25),
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 20),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = 0x7f,
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 25),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.postdiv_msk.postdiv_msk = 0x0,
		.itable = sc9850_adjustable_pll1_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name  = "clk_cppll",
		.lock_done.lock_done = (1 << 17),
		.lock_done.rindex = 0,
		.div_s.div_s = (1 << 15),
		.div_s.rindex = 0,
		.mod_en.mod_en = (1 << 14),
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = (1 << 13),
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 8),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = 0x7f,
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 25),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.postdiv_msk.postdiv_msk = 0x0,
		.itable = sc9850_adjustable_pll1_table,
		.udelay = SPRD_DELAY_240,
	},
	{
	/* rpll register bit is different from other plls. */
		.name  = "clk_rpll0",
		.lock_done.lock_done = (1 << 0),
		.lock_done.rindex = 0,
		.div_s.div_s = (1 << 3),
		.div_s.rindex = 0,
		.mod_en.mod_en = (1 << 16),
		.mod_en.rindex = 2,
		.sdm_en.sdm_en = (1 << 17),
		.sdm_en.rindex = 2,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 14),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = (0x7f << 16),
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 4),
		.nint_msk.rindex = 0,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.postdiv_msk.postdiv_msk = 0x0,
		.itable = sc9850_adjustable_pll1_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name  = "clk_rpll1",
		.lock_done.lock_done = (1 << 0),
		.lock_done.rindex = 0,
		.div_s.div_s = (1 << 3),
		.div_s.rindex = 0,
		.mod_en.mod_en = (1 << 16),
		.mod_en.rindex = 2,
		.sdm_en.sdm_en = (1 << 17),
		.sdm_en.rindex = 2,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 14),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = (0x7f << 16),
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 4),
		.nint_msk.rindex = 0,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.postdiv_msk.postdiv_msk = 0x0,
		.itable = sc9850_adjustable_pll1_table,
		.udelay = SPRD_DELAY_240,
	},
	{
	},
};

static struct sprd_ibias_table sc9861_adjustable_pll_ibias_table[] = {
	{
		.rate = 1014000000UL,
		.ibias = 0x0,
	},
	{
		.rate = 1300000000UL,
		.ibias = 0x1,
	},
	{
		.rate = 1612000000UL,
		.ibias = 0x2,
	},
	{
		.rate = SPRD_PLL_MAX_RATE,
		.ibias = 0x2,
	},
};

static struct sprd_ibias_table sc9861_cppll_ibias_table[] = {
	{
		.rate = 702000000UL,
		.ibias = 0x0,
	},
	{
		.rate = 884000000UL,
		.ibias = 0x1,
	},
	{
		.rate = 1118000000UL,
		.ibias = 0x2,
	},
	{
		.rate = SPRD_PLL_MAX_RATE,
		.ibias = 0x2,
	},
};

static struct fvco_threshold_struct sc9861_gpll_threshold = {
	.rate = 800000000,
	.flag = 0,
};

static struct sprd_pll_config sc9861_pll_config[] = {
	{
		.name  = "clk_gpll",
		.lock_done.lock_done = 1,
		.lock_done.rindex = 0,
		.div_s.div_s = 1,
		.div_s.rindex = 2,
		.mod_en.mod_en = 1,
		.mod_en.rindex = 1,
		.sdm_en.sdm_en = (1 << 1),
		.sdm_en.rindex = 1,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 16),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = (0x7f << 18),
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 25),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = (0x7fffff << 2),
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.postdiv_msk.fvco_threshold = &sc9861_gpll_threshold,
		.postdiv_msk.postdiv_msk = (1 << 1),
		.postdiv_msk.rindex = 0,
		.itable = sc9861_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name  = "clk_twpll",
		.lock_done.lock_done = (1 << 1),
		.lock_done.rindex = 0,
		.div_s.div_s = (1 << 5),
		.div_s.rindex = 2,
		.mod_en.mod_en = 1,
		.mod_en.rindex = 1,
		.sdm_en.sdm_en = (1 << 1),
		.sdm_en.rindex = 1,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 26),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = (0x7f << 19),
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 25),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = (0x7fffff << 2),
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.itable = sc9861_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name  = "clk_lpll0",
		.lock_done.lock_done = 1,
		.lock_done.rindex = 0,
		.div_s.div_s = (1 << 4),
		.div_s.rindex = 2,
		.mod_en.mod_en = 1,
		.mod_en.rindex = 1,
		.sdm_en.sdm_en = (1 << 1),
		.sdm_en.rindex = 1,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 26),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = (0x7f << 19),
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 25),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = (0x7fffff << 2),
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.itable = sc9861_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name  = "clk_lpll1",
		.lock_done.lock_done = 1,
		.lock_done.rindex = 0,
		.div_s.div_s = (1 << 4),
		.div_s.rindex = 2,
		.mod_en.mod_en = 1,
		.mod_en.rindex = 1,
		.sdm_en.sdm_en = (1 << 1),
		.sdm_en.rindex = 1,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 26),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = (0x7f << 19),
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 25),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = (0x7fffff << 2),
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.itable = sc9861_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name  = "clk_cppll",
		.lock_done.lock_done = 1,
		.lock_done.rindex = 0,
		.div_s.div_s = (1 << 9),
		.div_s.rindex = 2,
		.mod_en.mod_en = 1,
		.mod_en.rindex = 1,
		.sdm_en.sdm_en = (1 << 1),
		.sdm_en.rindex = 1,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 16),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = (0x7f << 18),
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 25),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = (0x7fffff << 2),
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.itable = sc9861_cppll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name  = "clk_dpll0",
		.lock_done.lock_done = 1,
		.lock_done.rindex = 0,
		.div_s.div_s = (1 << 12),
		.div_s.rindex = 2,
		.mod_en.mod_en = 1,
		.mod_en.rindex = 1,
		.sdm_en.sdm_en = (1 << 1),
		.sdm_en.rindex = 1,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 8),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = (0x7f << 10),
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 25),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = (0x7fffff << 2),
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.itable = sc9861_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name  = "clk_dpll1",
		.lock_done.lock_done = 1,
		.lock_done.rindex = 0,
		.div_s.div_s = (1 << 12),
		.div_s.rindex = 2,
		.mod_en.mod_en = 1,
		.mod_en.rindex = 1,
		.sdm_en.sdm_en = (1 << 1),
		.sdm_en.rindex = 1,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 8),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = (0x7f << 10),
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 25),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = (0x7fffff << 2),
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.itable = sc9861_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name  = "clk_rpll0",
		.lock_done.lock_done = 1,
		.lock_done.rindex = 0,
		.div_s.div_s = (1 << 23),
		.div_s.rindex = 2,
		.mod_en.mod_en = 1,
		.mod_en.rindex = 1,
		.sdm_en.sdm_en = (1 << 1),
		.sdm_en.rindex = 1,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 1),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = (0x7f << 11),
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 25),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = (0x7fffff << 2),
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.itable = sc9861_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name  = "clk_rpll1",
		.lock_done.lock_done = 1,
		.lock_done.rindex = 0,
		.div_s.div_s = (1 << 23),
		.div_s.rindex = 2,
		.mod_en.mod_en = 1,
		.mod_en.rindex = 1,
		.sdm_en.sdm_en = (1 << 1),
		.sdm_en.rindex = 1,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 16),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = (0x7f << 9),
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 25),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = (0x7fffff << 2),
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0,
		.prediv_msk.rindex = 0,
		.itable = sc9861_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
	},
};

static struct fvco_threshold_struct sc9833_cppll_threshold = {
	.rate = 800000000,
	.flag = 1,
};

static struct fvco_threshold_struct sc9833_gpll_threshold = {
	.rate = 400000000,
	.flag = 1,
};

static struct sprd_ibias_table sc9833_adjustable_pll_ibias_table[] = {
	{
		.rate = 988000000UL,
		.ibias = 0x0,
	},
	{
		.rate = 1274000000UL,
		.ibias = 0x1,
	},
	{
		.rate = 1600000000UL,
		.ibias = 0x2,
	},
	{
		.rate = SPRD_PLL_MAX_RATE,
		.ibias = 0x2,
	},
};

static struct sprd_pll_config sc9833_pll_config[] = {
	{
		.name  = "clk_mpll",
		.lock_done.lock_done = (1 << 21),
		.lock_done.rindex = 0,
		.div_s.div_s = (1 << 20),
		.div_s.rindex = 0,
		.mod_en.mod_en = (1 << 19),
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = (1 << 18),
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = (3 << 22),
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 11),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = (0x7ff),
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 23),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.prediv_msk.rindex = 1,
		.postdiv_msk.postdiv_msk = 0x0,
		.postdiv_msk.rindex = 1,
		.postdiv_msk.fvco_threshold = NULL,
		.itable = sc9833_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name  = "clk_gpll",
		.lock_done.lock_done = (1 << 21),
		.lock_done.rindex = 0,
		.div_s.div_s = (1 << 20),
		.div_s.rindex = 0,
		.mod_en.mod_en = (1 << 19),
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = (1 << 18),
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = (3 << 22),
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 11),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = (0x7ff),
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 23),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.prediv_msk.rindex = 1,
		.postdiv_msk.postdiv_msk = (1 << 30),
		.postdiv_msk.rindex = 1,
		.postdiv_msk.fvco_threshold = &sc9833_gpll_threshold,
		.itable = sc9833_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name  = "clk_dpll",
		.lock_done.lock_done = (1 << 21),
		.lock_done.rindex = 0,
		.div_s.div_s = (1 << 20),
		.div_s.rindex = 0,
		.mod_en.mod_en = (1 << 19),
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = (1 << 18),
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = (3 << 22),
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 11),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = (0x7ff),
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 23),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.prediv_msk.rindex = 1,
		.postdiv_msk.postdiv_msk = 0x0,
		.postdiv_msk.rindex = 1,
		.postdiv_msk.fvco_threshold = NULL,
		.itable = sc9833_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name  = "clk_twpll",
		.lock_done.lock_done = (1 << 21),
		.lock_done.rindex = 0,
		.div_s.div_s = (1 << 20),
		.div_s.rindex = 0,
		.mod_en.mod_en = (1 << 19),
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = (1 << 18),
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = (3 << 22),
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 11),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = (0x7ff),
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 23),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.prediv_msk.rindex = 1,
		.postdiv_msk.postdiv_msk = 0x0,
		.postdiv_msk.rindex = 1,
		.postdiv_msk.fvco_threshold = NULL,
		.itable = sc9833_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name  = "clk_lpll",
		.lock_done.lock_done = (1 << 21),
		.lock_done.rindex = 0,
		.div_s.div_s = (1 << 20),
		.div_s.rindex = 0,
		.mod_en.mod_en = (1 << 19),
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = (1 << 18),
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = (3 << 22),
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 11),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = (0x7ff),
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 23),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.prediv_msk.rindex = 1,
		.postdiv_msk.postdiv_msk = 0x0,
		.postdiv_msk.rindex = 1,
		.postdiv_msk.fvco_threshold = NULL,
		.itable = sc9833_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name  = "clk_rpll",
		.lock_done.lock_done = (1 << 21),
		.lock_done.rindex = 0,
		.div_s.div_s = (1 << 20),
		.div_s.rindex = 0,
		.mod_en.mod_en = (1 << 19),
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = (1 << 18),
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = (3 << 13),
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 11),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = (0x7ff),
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 23),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.prediv_msk.rindex = 1,
		.postdiv_msk.postdiv_msk = 0x0,
		.postdiv_msk.rindex = 1,
		.postdiv_msk.fvco_threshold = NULL,
		.itable = sc9833_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name  = "clk_cppll",
		.lock_done.lock_done = (1 << 21),
		.lock_done.rindex = 0,
		.div_s.div_s = (1 << 20),
		.div_s.rindex = 0,
		.mod_en.mod_en = (1 << 19),
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = (1 << 18),
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = (3 << 22),
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 11),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = (0x7ff),
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 23),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.prediv_msk.rindex = 1,
		.postdiv_msk.postdiv_msk = (1 << 30),
		.postdiv_msk.rindex = 1,
		.postdiv_msk.fvco_threshold = &sc9833_cppll_threshold,
		.itable = sc9833_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
	},
};

static struct fvco_threshold_struct sc9853_gpll_threshold = {
	.rate = 800000000,
	.flag = 1,
};

static struct sprd_pll_config sc9853_pll_config[] = {
	{
		.name  = "clk_gpll",
		.lock_done.lock_done = 1,
		.lock_done.rindex = 0,
		.div_s.div_s = 1,
		.div_s.rindex = 2,
		.mod_en.mod_en = 1,
		.mod_en.rindex = 1,
		.sdm_en.sdm_en = (1 << 1),
		.sdm_en.rindex = 1,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 17),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = (0x7ff << 19),
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 25),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = (0x7fffff << 2),
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.prediv_msk.rindex = 0,
		.postdiv_msk.postdiv_msk = (1 << 1),
		.postdiv_msk.rindex = 0,
		.postdiv_msk.fvco_threshold = &sc9853_gpll_threshold,
		.itable = sc9861_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name  = "clk_dpll0",
		.lock_done.lock_done = 1,
		.lock_done.rindex = 0,
		.div_s.div_s = (1 << 12),
		.div_s.rindex = 2,
		.mod_en.mod_en = 1,
		.mod_en.rindex = 1,
		.sdm_en.sdm_en = (1 << 1),
		.sdm_en.rindex = 1,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 8),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = (0x7f << 10),
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 25),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = (0x7fffff << 2),
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.itable = sc9861_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name  = "clk_twpll",
		.lock_done.lock_done = (1 << 1),
		.lock_done.rindex = 0,
		.div_s.div_s = (1 << 5),
		.div_s.rindex = 2,
		.mod_en.mod_en = 1,
		.mod_en.rindex = 1,
		.sdm_en.sdm_en = (1 << 1),
		.sdm_en.rindex = 1,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 25),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = (0x7f << 18),
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 25),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = (0x7fffff << 2),
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.itable = sc9861_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name  = "clk_lpll0",
		.lock_done.lock_done = 1,
		.lock_done.rindex = 0,
		.div_s.div_s = (1 << 4),
		.div_s.rindex = 2,
		.mod_en.mod_en = 1,
		.mod_en.rindex = 1,
		.sdm_en.sdm_en = (1 << 1),
		.sdm_en.rindex = 1,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 25),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = (0x7f << 18),
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 25),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = (0x7fffff << 2),
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.itable = sc9861_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name  = "clk_rpll0",
		.lock_done.lock_done = 1,
		.lock_done.rindex = 0,
		.div_s.div_s = (1 << 23),
		.div_s.rindex = 2,
		.mod_en.mod_en = 1,
		.mod_en.rindex = 1,
		.sdm_en.sdm_en = (1 << 1),
		.sdm_en.rindex = 1,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 1),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = (0x7f << 11),
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 25),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = (0x7fffff << 2),
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.itable = sc9861_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name  = "clk_isppll",
		.lock_done.lock_done = 1,
		.lock_done.rindex = 0,
		.div_s.div_s = 1,
		.div_s.rindex = 2,
		.mod_en.mod_en = 1,
		.mod_en.rindex = 1,
		.sdm_en.sdm_en = (1 << 1),
		.sdm_en.rindex = 1,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 16),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = (0x7ff << 18),
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 25),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = (0x7fffff << 2),
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.prediv_msk.rindex = 0,
		.postdiv_msk.postdiv_msk = 0,
		.postdiv_msk.rindex = 0,
		.itable = sc9861_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
	},
};

/* sc9850kh pll ibias/fvco same as sc9833 */
static struct sprd_pll_config sc9850kh_pll_config[] = {
	{
		.name  = "clk_mpll0",
		.lock_done.lock_done = (1 << 0),
		.lock_done.rindex = 2,
		.div_s.div_s = (1 << 0),
		.div_s.rindex = 0,
		.mod_en.mod_en = (1 << 1),
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = (1 << 2),
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 6),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = (0x7ff << 8),
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 25),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = (0x7fffff << 2),
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.prediv_msk.rindex = 2,
		.postdiv_msk.postdiv_msk = 0x0,
		.postdiv_msk.rindex = 2,
		.postdiv_msk.fvco_threshold = NULL,
		.itable = sc9833_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name  = "clk_mpll1",
		.lock_done.lock_done = (1 << 0),
		.lock_done.rindex = 2,
		.div_s.div_s = (1 << 0),
		.div_s.rindex = 0,
		.mod_en.mod_en = (1 << 1),
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = (1 << 2),
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 6),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = (0x7ff << 8),
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 25),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = (0x7fffff << 2),
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.prediv_msk.rindex = 2,
		.postdiv_msk.postdiv_msk = 0x0,
		.postdiv_msk.rindex = 2,
		.postdiv_msk.fvco_threshold = NULL,
		.itable = sc9833_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name  = "clk_gpll",
		.lock_done.lock_done = (1 << 8),
		.lock_done.rindex = 2,
		.div_s.div_s = (1 << 1),
		.div_s.rindex = 0,
		.mod_en.mod_en = (1 << 2),
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = (1 << 3),
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 7),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = (0x7ff << 9),
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 23),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = (0x7fffff << 0),
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.prediv_msk.rindex = 2,
		.postdiv_msk.postdiv_msk = (1 << 10),
		.postdiv_msk.rindex = 2,
		.postdiv_msk.fvco_threshold = &sc9833_gpll_threshold,
		.itable = sc9833_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name  = "clk_dpll",
		.lock_done.lock_done = (1 << 0),
		.lock_done.rindex = 0,
		.div_s.div_s = (1 << 10),
		.div_s.rindex = 0,
		.mod_en.mod_en = (1 << 11),
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = (1 << 12),
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 16),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = (0x7ff << 18),
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 25),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = (0x7fffff << 2),
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.prediv_msk.rindex = 1,
		.postdiv_msk.postdiv_msk = 0x0,
		.postdiv_msk.rindex = 1,
		.postdiv_msk.fvco_threshold = NULL,
		.itable = sc9833_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name  = "clk_twpll",
		.lock_done.lock_done = (1 << 0),
		.lock_done.rindex = 2,
		.div_s.div_s = (1 << 2),
		.div_s.rindex = 0,
		.mod_en.mod_en = (1 << 3),
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = (1 << 4),
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 8),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = (0x7ff << 10),
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 23),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = (0x7fffff << 0),
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.prediv_msk.rindex = 1,
		.postdiv_msk.postdiv_msk = 0x0,
		.postdiv_msk.rindex = 1,
		.postdiv_msk.fvco_threshold = NULL,
		.itable = sc9833_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name  = "clk_lpll",
		.lock_done.lock_done = (1 << 0),
		.lock_done.rindex = 2,
		.div_s.div_s = (1 << 2),
		.div_s.rindex = 0,
		.mod_en.mod_en = (1 << 3),
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = (1 << 4),
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 8),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = (0x7ff << 10),
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 23),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = (0x7fffff << 0),
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.prediv_msk.rindex = 1,
		.postdiv_msk.postdiv_msk = 0x0,
		.postdiv_msk.rindex = 1,
		.postdiv_msk.fvco_threshold = NULL,
		.itable = sc9833_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name  = "clk_rpll",
		.lock_done.lock_done = (1 << 0),
		.lock_done.rindex = 2,
		.div_s.div_s = (1 << 3),
		.div_s.rindex = 0,
		.mod_en.mod_en = (1 << 4),
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = (1 << 5),
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 9),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = (0x7ff << 11),
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 23),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = (0x7fffff << 0),
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.prediv_msk.rindex = 1,
		.postdiv_msk.postdiv_msk = 0x0,
		.postdiv_msk.rindex = 1,
		.postdiv_msk.fvco_threshold = NULL,
		.itable = sc9833_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name  = "clk_cppll",
		.lock_done.lock_done = (1 << 0),
		.lock_done.rindex = 2,
		.div_s.div_s = (1 << 1),
		.div_s.rindex = 0,
		.mod_en.mod_en = (1 << 2),
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = (1 << 3),
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = (3 << 7),
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = (0x7ff << 9),
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = (0x7f << 23),
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = (0x7fffff << 0),
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0x0,
		.prediv_msk.rindex = 2,
		.postdiv_msk.postdiv_msk = (1 << 4),
		.postdiv_msk.rindex = 2,
		.postdiv_msk.fvco_threshold = &sc9833_cppll_threshold,
		.itable = sc9833_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
	},
};

static struct sprd_ibias_table sc9835_adjustable_pll_ibias_table[] = {
	{
		.rate = 936000000UL,
		.ibias = 0x0,
	},
	{
		.rate = 1248000000UL,
		.ibias = 0x1,
	},
	{
		.rate = 1600000000UL,
		.ibias = 0x2,
	},
	{
		.rate = SPRD_PLL_MAX_RATE,
		.ibias = 0x2,
	},
};

static struct sprd_pll_config sc9835_pll_config[] = {
	{
		.name = "clk_mpll",
		.lock_done.lock_done = 0,
		.lock_done.rindex = 0,
		.div_s.div_s = 1,
		.div_s.rindex = 0,
		.mod_en.mod_en = 1 << 1,
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = 1 << 2,
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = 3 << 6,
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = 0x7ff << 8,
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = 0x3f << 23,
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0,
		.prediv_msk.rindex = 0,
		.postdiv_msk.postdiv_msk = 0x0,
		.itable = sc9835_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name = "clk_gpll",
		.lock_done.lock_done = 0,
		.lock_done.rindex = 0,
		.div_s.div_s = 1 << 1,
		.div_s.rindex = 0,
		.mod_en.mod_en = 1 << 2,
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = 1 << 3,
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = 3 << 7,
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = 0x7ff << 9,
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = 0x3f << 23,
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0,
		.prediv_msk.rindex = 0,
		.postdiv_msk.postdiv_msk = 1,
		.postdiv_msk.rindex = 2,
		.postdiv_msk.fvco_threshold = &sc9833_gpll_threshold,
		.itable = sc9835_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name = "clk_twpll",
		.lock_done.lock_done = 0,
		.lock_done.rindex = 0,
		.div_s.div_s = 1,
		.div_s.rindex = 0,
		.mod_en.mod_en = 1 << 1,
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = 1 << 2,
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = 3 << 6,
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = 0x7ff << 8,
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = 0x3f << 23,
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0,
		.prediv_msk.rindex = 0,
		.postdiv_msk.postdiv_msk = 0x0,
		.itable = sc9835_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name = "clk_dpll",
		.lock_done.lock_done = 0,
		.lock_done.rindex = 0,
		.div_s.div_s = 1 << 9,
		.div_s.rindex = 0,
		.mod_en.mod_en = 1 << 10,
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = 1 << 11,
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = 3 << 15,
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = 0x7ff << 17,
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = 0x3f << 23,
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0,
		.prediv_msk.rindex = 0,
		.postdiv_msk.postdiv_msk = 0x0,
		.itable = sc9835_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name = "clk_lpll",
		.lock_done.lock_done = 0,
		.lock_done.rindex = 0,
		.div_s.div_s = 1,
		.div_s.rindex = 0,
		.mod_en.mod_en = 1 << 1,
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = 1 << 2,
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = 3 << 6,
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = 0x7ff << 8,
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = 0x3f << 23,
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0,
		.prediv_msk.rindex = 0,
		.postdiv_msk.postdiv_msk = 0x0,
		.itable = sc9835_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name = "clk_isppll",
		.lock_done.lock_done = 0,
		.lock_done.rindex = 0,
		.div_s.div_s = 1 << 1,
		.div_s.rindex = 0,
		.mod_en.mod_en = 1 << 2,
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = 1 << 3,
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = 3 << 7,
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = 0x7ff << 9,
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = 0x3f << 23,
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0,
		.prediv_msk.rindex = 0,
		.postdiv_msk.postdiv_msk = 0,
		.itable = sc9835_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name = "clk_rpll",
		.lock_done.lock_done = 0,
		.lock_done.rindex = 0,
		.div_s.div_s = 1 << 3,
		.div_s.rindex = 0,
		.mod_en.mod_en = 1 << 4,
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = 1 << 5,
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = 3 << 9,
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = 0x7ff << 11,
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = 0x3f << 23,
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0,
		.prediv_msk.rindex = 0,
		.postdiv_msk.postdiv_msk = 0x0,
		.itable = sc9835_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
	},
};

static struct fvco_threshold_struct sc7731e_gpll_threshold = {
	.rate = 600000000UL,
	.flag = 1,
};

static struct sprd_ibias_table sc7731e_adjustable_pll_ibias_table[] = {
	{
		.rate = 951000000UL,
		.ibias = 0x0,
	},
	{
		.rate = 1131000000UL,
		.ibias = 0x1,
	},
	{
		.rate = 1145000000UL,
		.ibias = 0x2,
	},
	{
		.rate = 1600000000UL,
		.ibias = 0x3,
	},
	{
		.rate = SPRD_PLL_MAX_RATE,
		.ibias = 0x3,
	},
};

static struct sprd_pll_config sc7731e_pll_config[] = {
	{
		.name = "clk_mpll",
		.lock_done.lock_done = 0,
		.lock_done.rindex = 0,
		.div_s.div_s = (1 << 20),
		.div_s.rindex = 0,
		.mod_en.mod_en = 1 << 19,
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = 1 << 18,
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = 3 << 11,
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = 0x7ff,
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = 0x3f << 23,
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0,
		.prediv_msk.rindex = 0,
		.postdiv_msk.postdiv_msk = 0x0,
		.itable = sc7731e_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name = "clk_gpll",
		.lock_done.lock_done = 0,
		.lock_done.rindex = 0,
		.div_s.div_s = 1 << 20,
		.div_s.rindex = 0,
		.mod_en.mod_en = 1 << 19,
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = 1 << 18,
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = 3 << 11,
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = 0x7ff,
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = 0x3f << 23,
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0,
		.prediv_msk.rindex = 0,
		.postdiv_msk.postdiv_msk = 1 << 13,
		.postdiv_msk.rindex = 0,
		.postdiv_msk.fvco_threshold = &sc7731e_gpll_threshold,
		.itable = sc7731e_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name = "clk_twpll",
		.lock_done.lock_done = 0,
		.lock_done.rindex = 0,
		.div_s.div_s = 1 << 20,
		.div_s.rindex = 0,
		.mod_en.mod_en = 1 << 19,
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = 1 << 18,
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = 3 << 11,
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = 0x7ff,
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = 0x3f << 23,
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0,
		.prediv_msk.rindex = 0,
		.postdiv_msk.postdiv_msk = 0x0,
		.itable = sc7731e_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name = "clk_dpll",
		.lock_done.lock_done = 0,
		.lock_done.rindex = 0,
		.div_s.div_s = 1 << 20,
		.div_s.rindex = 0,
		.mod_en.mod_en = 1 << 19,
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = 1 << 18,
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = 3 << 11,
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = 0x7ff,
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = 0x3f << 23,
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0,
		.prediv_msk.rindex = 0,
		.postdiv_msk.postdiv_msk = 0x0,
		.itable = sc7731e_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name = "clk_cpll",
		.lock_done.lock_done = 0,
		.lock_done.rindex = 0,
		.div_s.div_s = 1 << 20,
		.div_s.rindex = 0,
		.mod_en.mod_en = 1 << 19,
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = 1 << 18,
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = 3 << 11,
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = 0x7ff,
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = 0x3f << 23,
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0,
		.prediv_msk.rindex = 0,
		.postdiv_msk.postdiv_msk = 0x0,
		.itable = sc7731e_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
	},
};

static struct fvco_threshold_struct sc9863a_mpll_threshold = {
	.rate = 1000000000,
	.flag = 1,
};

static struct sprd_ibias_table sc9863a_adjustable_mpll_ibias_table[] = {
	{
		.rate = 1000000000UL,
		.ibias = 0x0,
	},
	{
		.rate = 1200000000UL,
		.ibias = 0x1,
	},
	{
		.rate = 1400000000UL,
		.ibias = 0x2,
	},
	{
		.rate = 1600000000UL,
		.ibias = 0x3,
	},
	{
		.rate = 1800000000UL,
		.ibias = 0x4,
	},
	{
		.rate = SPRD_PLL_MAX_RATE,
		.ibias = 0x5,
	}
};

static struct sprd_ibias_table sc9863a_adjustable_pll_ibias_table[] = {
	{
		.rate = 1000000000UL,
		.ibias = 0x0,
	},
	{
		.rate = 1200000000UL,
		.ibias = 0x1,
	},
	{
		.rate = 1400000000UL,
		.ibias = 0x2,
	},
	{
		.rate = 1600000000UL,
		.ibias = 0x3,
	},
	{
		.rate = SPRD_PLL_MAX_RATE,
		.ibias = 0x3,
	},
};

static struct sprd_ibias_table sc9863a_adjustable_dpll_ibias_table[] = {
	{
		.rate = 1211000000UL,
		.ibias = 0x0,
	},
	{
		.rate = 1320000000UL,
		.ibias = 0x1,
	},
	{
		.rate = 1570000000UL,
		.ibias = 0x2,
	},
	{
		.rate = 1866000000UL,
		.ibias = 0x3,
	},
	{
		.rate = SPRD_PLL_MAX_RATE,
		.ibias = 0x3,
	},
};

static struct sprd_pll_config sc9863a_pll_config[] = {
	{
		.name = "clk_mpll0",
		.lock_done.lock_done = 1 << 31,
		.lock_done.rindex = 2,
		.div_s.div_s = 1,
		.div_s.rindex = 0,
		.mod_en.mod_en = 1 << 1,
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = 1 << 2,
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = 3 << 6,
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = 0x7ff << 8,
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = 0x7f << 23,
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0,
		.prediv_msk.rindex = 0,
		.postdiv_msk.postdiv_msk = 1 << 16,
		.postdiv_msk.rindex = 2,
		.postdiv_msk.fvco_threshold = &sc9863a_mpll_threshold,
		.itable = sc9863a_adjustable_mpll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name = "clk_mpll1",
		.lock_done.lock_done = 1 << 31,
		.lock_done.rindex = 2,
		.div_s.div_s = 1,
		.div_s.rindex = 0,
		.mod_en.mod_en = 1 << 1,
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = 1 << 2,
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = 3 << 6,
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = 0x7ff << 8,
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = 0x7f << 23,
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0,
		.prediv_msk.rindex = 0,
		.postdiv_msk.postdiv_msk = 1 << 16,
		.postdiv_msk.rindex = 2,
		.postdiv_msk.fvco_threshold = &sc9863a_mpll_threshold,
		.itable = sc9863a_adjustable_mpll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name = "clk_mpll2",
		.lock_done.lock_done = 1 << 31,
		.lock_done.rindex = 2,
		.div_s.div_s = 1,
		.div_s.rindex = 0,
		.mod_en.mod_en = 1 << 1,
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = 1 << 2,
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = 3 << 6,
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = 0x7ff << 8,
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = 0x7f << 23,
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0,
		.prediv_msk.rindex = 0,
		.postdiv_msk.postdiv_msk = 1 << 16,
		.postdiv_msk.rindex = 2,
		.postdiv_msk.fvco_threshold = &sc9863a_mpll_threshold,
		.itable = sc9863a_adjustable_mpll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name = "clk_gpll",
		.lock_done.lock_done = 1 << 31,
		.lock_done.rindex = 2,
		.div_s.div_s = 1,
		.div_s.rindex = 0,
		.mod_en.mod_en = 1 << 1,
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = 1 << 2,
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = 3 << 6,
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = 0x7ff << 8,
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = 0x7f << 23,
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0,
		.prediv_msk.rindex = 0,
		.postdiv_msk.postdiv_msk = 1 << 16,
		.postdiv_msk.rindex = 2,
		.postdiv_msk.fvco_threshold = &sc9833_cppll_threshold,
		.itable = sc9863a_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name = "clk_isppll",
		.lock_done.lock_done = 1 << 31,
		.lock_done.rindex = 2,
		.div_s.div_s = 1,
		.div_s.rindex = 0,
		.mod_en.mod_en = 1 << 1,
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = 1 << 2,
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = 3 << 6,
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = 0x7ff << 8,
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = 0x7f << 23,
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0,
		.prediv_msk.rindex = 0,
		.postdiv_msk.postdiv_msk = 1 << 16,
		.postdiv_msk.rindex = 2,
		.postdiv_msk.fvco_threshold = &sc9833_cppll_threshold,
		.itable = sc9863a_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name = "clk_lpll",
		.lock_done.lock_done = 1 << 31,
		.lock_done.rindex = 2,
		.div_s.div_s = 1,
		.div_s.rindex = 0,
		.mod_en.mod_en = 1 << 1,
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = 1 << 2,
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = 3 << 6,
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = 0x7ff << 8,
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = 0x7f << 23,
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0,
		.prediv_msk.rindex = 0,
		.postdiv_msk.postdiv_msk = 0x0,
		.itable = sc9863a_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name = "clk_twpll",
		.lock_done.lock_done = 1 << 31,
		.lock_done.rindex = 2,
		.div_s.div_s = 1,
		.div_s.rindex = 0,
		.mod_en.mod_en = 1 << 1,
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = 1 << 2,
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = 7 << 3,
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = 0x7ff << 8,
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = 0x7f << 23,
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0,
		.prediv_msk.rindex = 0,
		.postdiv_msk.postdiv_msk = 0x0,
		.itable = sc9863a_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name = "clk_rpll",
		.lock_done.lock_done = 1 << 31,
		.lock_done.rindex = 2,
		.div_s.div_s = 1,
		.div_s.rindex = 0,
		.mod_en.mod_en = 1 << 1,
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = 1 << 2,
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = 3 << 6,
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = 0x7ff << 8,
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = 0x7f << 23,
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0,
		.prediv_msk.rindex = 0,
		.postdiv_msk.postdiv_msk = 0x0,
		.itable = sc9863a_adjustable_pll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name = "clk_dpll0",
		.lock_done.lock_done = 1 << 31,
		.lock_done.rindex = 2,
		.div_s.div_s = 1,
		.div_s.rindex = 0,
		.mod_en.mod_en = 1 << 1,
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = 1 << 2,
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = 3 << 6,
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = 0x7ff << 8,
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = 0x7f << 23,
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0,
		.prediv_msk.rindex = 0,
		.postdiv_msk.postdiv_msk = 0x0,
		.itable = sc9863a_adjustable_dpll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
		.name = "clk_dpll1",
		.lock_done.lock_done = 1 << 31,
		.lock_done.rindex = 2,
		.div_s.div_s = 1,
		.div_s.rindex = 0,
		.mod_en.mod_en = 1 << 1,
		.mod_en.rindex = 0,
		.sdm_en.sdm_en = 1 << 2,
		.sdm_en.rindex = 0,
		.refin_msk.refin_msk = 0,
		.refin_msk.rindex = 0,
		.ibias_msk.ibias_msk = 3 << 6,
		.ibias_msk.rindex = 0,
		.pll_n_msk.pll_n_msk = 0x7ff << 8,
		.pll_n_msk.rindex = 0,
		.nint_msk.nint_msk = 0x7f << 23,
		.nint_msk.rindex = 1,
		.kint_msk.kint_msk = 0x7fffff,
		.kint_msk.rindex = 1,
		.prediv_msk.prediv_msk = 0,
		.prediv_msk.rindex = 0,
		.postdiv_msk.postdiv_msk = 0x0,
		.itable = sc9863a_adjustable_dpll_ibias_table,
		.udelay = SPRD_DELAY_240,
	},
	{
	},
};

#endif
